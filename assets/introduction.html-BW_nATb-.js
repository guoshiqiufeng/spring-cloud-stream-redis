import{_ as t,c as i,a,o as r}from"./app-DuW-mWuI.js";const n={};function s(o,e){return r(),i("div",null,e[0]||(e[0]=[a('<h1 id="guide" tabindex="-1"><a class="header-anchor" href="#guide"><span>Guide</span></a></h1><p><a href="https://github.com/guoshiqiufeng/spring-cloud-stream-redis" target="_blank" rel="noopener noreferrer">spring-cloud-stream-redis</a> It is based on spring-cloud-stream Implementation of the Redis messaging framework.</p><h2 id="characterization" tabindex="-1"><a class="header-anchor" href="#characterization"><span>Characterization</span></a></h2><ul><li><strong>Non-intrusive</strong>: Use Redis messages non-intrusively by way of spring-cloud-stream.</li><li><strong>Standardize</strong>：Adapt multiple MQ messages in one development, and switch to other MQ middleware without loss.</li></ul><h2 id="supported" tabindex="-1"><a class="header-anchor" href="#supported"><span>Supported</span></a></h2><ul><li>Redis 5.x and above</li></ul><h2 id="features" tabindex="-1"><a class="header-anchor" href="#features"><span>Features</span></a></h2><ul><li>Available - ✅</li><li>In progress - 🚧</li></ul><table><thead><tr><th>Features</th><th>Status</th></tr></thead><tbody><tr><td>【PUBLISH SUBSCRIBE】【Topic】Send</td><td>✅</td></tr><tr><td>【PUBLISH SUBSCRIBE】【Topic】 Consumer with message listener</td><td>✅</td></tr><tr><td>【PUBLISH SUBSCRIBE】【Topic-Pattern】Consumer with message listener</td><td>✅</td></tr><tr><td>【QUEUE】【Topic】Send</td><td>✅</td></tr><tr><td>【QUEUE】【Topic】Consumer with message listener</td><td>✅</td></tr></tbody></table><p>Notes:</p><ul><li>The two function modes cannot be mixed, i.e., if you send a message in PUBLISH SUBSCRIBE mode, you cannot receive a message in QUEUE mode, and vice versa.</li><li>PUBLISH SUBSCRIBE mode message will be lost if not received, QUEUE mode will not.</li></ul><h2 id="code-hosting" tabindex="-1"><a class="header-anchor" href="#code-hosting"><span>Code hosting</span></a></h2><blockquote><p><strong><a href="https://github.com/guoshiqiufeng/spring-cloud-stream-redis" target="_blank" rel="noopener noreferrer">GitHub</a></strong></p></blockquote>',13)]))}const l=t(n,[["render",s],["__file","introduction.html.vue"]]),h=JSON.parse('{"path":"/en/guide/introduction.html","title":"Guide","lang":"en-US","frontmatter":{"lang":"en-US","title":"Guide","description":"Guide"},"headers":[{"level":2,"title":"Characterization","slug":"characterization","link":"#characterization","children":[]},{"level":2,"title":"Supported","slug":"supported","link":"#supported","children":[]},{"level":2,"title":"Features","slug":"features","link":"#features","children":[]},{"level":2,"title":"Code hosting","slug":"code-hosting","link":"#code-hosting","children":[]}],"git":{"updatedTime":1725629140000,"contributors":[{"name":"yanghq","username":"yanghq","email":"1040926235@qq.com","commits":2,"url":"https://github.com/yanghq"}]},"filePathRelative":"en/guide/introduction.md"}');export{l as comp,h as data};
